<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Grafana on S0okJu.dev</title><link>https://s0okju.github.io/tags/grafana/</link><description>Recent content in Grafana on S0okJu.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 07 Mar 2025 00:00:00 +0900</lastBuildDate><atom:link href="https://s0okju.github.io/tags/grafana/index.xml" rel="self" type="application/rss+xml"/><item><title>HexaCTF 9. Challenge Operator 커스텀 메트릭 설정 및 Prometheus Operator와 연결하기</title><link>https://s0okju.github.io/p/hexactf-9/</link><pubDate>Fri, 07 Mar 2025 00:00:00 +0900</pubDate><guid>https://s0okju.github.io/p/hexactf-9/</guid><description>&lt;h2 id="prometheus">Prometheus
&lt;/h2>&lt;h3 id="왜-promethues-operator를-사용했을까">왜 promethues Operator를 사용했을까?
&lt;/h3>&lt;p>Prometheus는 다양한 대상(target)에서 시간 경과에 따른 지표를 수집하여 저장하는 시계열 데이터베이스입니다. 이러한 데이터를 우리 눈에 쉽게 보여주는 것이 Grafana입니다.&lt;/p>
&lt;blockquote>
&lt;p>프로메테우스 실행 절차는 &lt;a class="link" href="https://wlsdn3004.tistory.com/35" target="_blank" rel="noopener"
>wlsdn3004님의 Prometheus 란?&lt;/a>를 참고하시길 바랍니다.&lt;/p>&lt;/blockquote>
&lt;p>여기서 단순한 쿠버네티스가 아닌 쿠버네티스 오퍼레이터를 활용한 이유는 서비스 모니터를 통해 멀티 클러스터 혹은 다른 네임스페이스 환경에 대응할 수 있기 때문입니다.&lt;br>
여기서 서비스 모니터가 무엇인지 알아야겠죠? 서비스 모니터(ServiceMonitor)는 동적으로 다수 서비스를 모니터링할 수 있는 방법을 선언적으로 정의한 것입니다. 원하는 구성으로 ServiceMonitor를 적용시키면 Prometheus Operator는 자동으로 새로운 서비스를 찾게 됩니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image.png"
width="798"
height="355"
srcset="https://s0okju.github.io/p/hexactf-9/image_hu_fdd2ca4f2b5427d9.png 480w, https://s0okju.github.io/p/hexactf-9/image_hu_326563f517b9604c.png 1024w"
loading="lazy"
alt="출처 - Prometheus Operator Architecture. Source:  www.nicktriller.com"
class="gallery-image"
data-flex-grow="224"
data-flex-basis="539px"
>&lt;/p>
&lt;p>제가 Prometheus Operator를 쓰는 이유는 &lt;strong>다른 Namespace에 있는 Challenge Operator의 메트릭 정보를 얻기 위해서입니다.&lt;/strong> 구체적으로 어떻게 설정할지는 아래에서 설명하겠습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-1.png"
width="972"
height="677"
srcset="https://s0okju.github.io/p/hexactf-9/image-1_hu_35953a980b95830c.png 480w, https://s0okju.github.io/p/hexactf-9/image-1_hu_973d19064e74c360.png 1024w"
loading="lazy"
alt="네임스페이스에 따른 프로젝트 구성도"
class="gallery-image"
data-flex-grow="143"
data-flex-basis="344px"
>&lt;/p>
&lt;h2 id="challenge-상태를-나타내는-커스텀-메트릭-제작하기">Challenge 상태를 나타내는 커스텀 메트릭 제작하기
&lt;/h2>&lt;h3 id="challenge-상태-정보-메트릭의-특징">Challenge 상태 정보 메트릭의 특징
&lt;/h3>&lt;h5 id="빠른-문제-해결">빠른 문제 해결
&lt;/h5>&lt;p>현재 저희 대회에서 필요한 것은 Challenge 성능 정보보다 &lt;strong>상태 정보&lt;/strong>입니다. 왜냐하면 문제 발생 시 빠르게 대처해야 하기 때문입니다.&lt;/p>
&lt;p>여기서 Challenge 내에 있는 Deployment에 대해 이해해야 합니다. 해킹 문제의 경우 취약한 하나의 기능을 구현하여 배포하게 됩니다. 즉, 모든 프로그램 자체가 단순합니다. 또한 한 사람당 하나의 Challenge만 사용하기 때문에 트래픽 문제가 발생할 확률은 높습니다.&lt;/p>
&lt;blockquote>
&lt;p>트래픽 항상 낮게 측정되지 않습니다. 간혹 Brute Force 특징을 가진 해킹 도구를 활용하는 경우가 있습니다. 그러나 이러한 행동은 부정 행위로 간주됩니다.&lt;/p>&lt;/blockquote>
&lt;p>여기서 말하는 문제는 &lt;strong>서버 생성 실패, 서버 삭제 실패 등 오퍼레이터에 발생하는 문제&lt;/strong>를 말하는 것입니다. 빈번하는 아니지만 드물게 삭제가 실패되는 경우가 있어서 Challenge 상태 정보를 중심으로 시각화를 했습니다. 만약에 삭제가 실패되었는데 실행 중이라면 남아 있는 리소스를 삭제하는 것이 우선이겠죠?&lt;/p>
&lt;p>좀 더 자세하게 구현하기 위해서는 상태 메트릭뿐만 아니라 로깅과 다른 메트릭을 조합해서 구현해야 할 것 입니다. 그러나 시간 관계 상 구현하지 못했으며 추후 구현할 예정입니다.&lt;/p>
&lt;h4 id="challenge-사용-패턴-확인">Challenge 사용 패턴 확인
&lt;/h4>&lt;p>제가 상태 정보를 우선 제작한 이유이기도 합니다.&lt;/p>
&lt;p>대회 이전에는 2가지 궁금증을 가지고 있었습니다. 아래의 질문들은 서버 메모리 용량을 산정할때 필요합니다.&lt;/p>
&lt;ol>
&lt;li>사람들은 한번에 몇개의 서버를 만들고 방치할까? -&amp;gt; 한 사람당 최대 몇개의 서버&lt;/li>
&lt;li>문제 분야마다 푸는 패턴이 있을까? -&amp;gt; Challenge 리소스 양과 분야 별 비율&lt;/li>
&lt;/ol>
&lt;p>사용 패턴은 현재보다는 미래를 위한 메트릭 지표라고 보면 됩니다.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>여담&lt;/strong>
글 작성 시점으로 대회를 성공적으로 마무리했습니다. 사용자 패턴에 대해서는 다른 글에서 뵙겠습니다.&lt;/p>&lt;/blockquote>
&lt;h3 id="어떤-메트릭을-활용할까">어떤 메트릭을 활용할까
&lt;/h3>&lt;p>&lt;a class="link" href="https://prometheus.io/docs/concepts/metric_types/" target="_blank" rel="noopener"
>Prometheus 공식 문서&lt;/a>에 의하면 메트릭은 4개가 있습니다.&lt;/p>
&lt;ul>
&lt;li>Guage: 임의로 올라가거나 내려갈 수 있는 단일 숫자값을 나타내느 메트릭&lt;/li>
&lt;li>Counter : 누적되는 메트릭 값. 감소가 없음&lt;/li>
&lt;li>Histogram :지연 시간, 처리시간과 같이 연속형 값을 다룰때 사용&lt;/li>
&lt;li>Summary : 연속적인 데이터 값의 분포를 측정&lt;/li>
&lt;/ul>
&lt;h4 id="선택-기준은">선택 기준은?
&lt;/h4>&lt;p>저는 최종적으로 &lt;strong>Gauge&lt;/strong>를 선택하게 되었습니다.&lt;/p>
&lt;ul>
&lt;li>n시간 마다 수집되어야 함&lt;/li>
&lt;li>Running, Deleted, Error 개수의 증감을 표현할 수 있어야 함&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">crStatusMetric&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">prometheus&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewGaugeVec&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">prometheus&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">GaugeOpts&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;challenge_resource_status&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Help&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;Tracks the status of the custom resource&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;challeng_id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;challenge_name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;namespace&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">metrics&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MustRegister&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">crStatusMetric&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="label은-어떻게-설정할까">Label은 어떻게 설정할까?
&lt;/h3>&lt;p>Prometheus의 Label은 키-값 쌍으로 이뤄져 있으며, Proemtheus가 시계열 데이터를 식별하는데 메트릭 이름과 더불어서 사용합니다.&lt;/p>
&lt;p>제가 원하는 상태 정보는 크게 세 가지 입니다. 제가 위해서 말한 2가지 목적에 대입하면 아래와 같습니다.&lt;/p>
&lt;ul>
&lt;li>상태별 Challenge 개수
&lt;ul>
&lt;li>전체 Challenge 현황을 파악하기 위해&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>사용자, 문제 별&lt;/strong> Challenge 상태
&lt;ul>
&lt;li>사용자 패턴 파악&lt;/li>
&lt;li>Error 문제 발생 시 빠르게 문제를 대처하기 위해&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>문제별 실행 중/에러 커스텀 리소스 수
&lt;ul>
&lt;li>사용자 패턴 파악&lt;/li>
&lt;li>오류 사항이 있는 Challenge를 찾기 위해&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>그렇다면 Label로 무조건 지정할 것은 &lt;strong>사용자 식별자, 문제 식별자&lt;/strong>입니다. 이 두가지를 포함하여 Challenge 이름과 Namespace도 추가했습니다.&lt;/p>
&lt;blockquote>
&lt;p>본래 종류에 따라 Namespace를 분리할 예정이었습니다. 그러나 시간 관계 상 못하게 되어 코드에 남게 되었습니다.&lt;/p>&lt;/blockquote>
&lt;p>그리고 상태 정보를 값으로 설정했습니다. Gauge의 특징 중에 하나는 값을 증감할 수 있다고 했죠? 이 기능을 활용할 예정입니다.&lt;/p>
&lt;ul>
&lt;li>Running: 1&lt;/li>
&lt;li>Deleted: 2&lt;/li>
&lt;li>Error: 3&lt;/li>
&lt;/ul>
&lt;p>실제 코드로 작성하면 아래와 같습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">crStatusMetric&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">prometheus&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewGaugeVec&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">prometheus&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">GaugeOpts&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Name&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;challenge_resource_status&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Help&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;Tracks the status of the custom resource&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="s">&amp;#34;challeng_id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;challenge_name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;namespace&amp;#34;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">metrics&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">MustRegister&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">crStatusMetric&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">crStatusMetric&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithLabelValues&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Labels&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;apps.hexactf.io/challengeId&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Labels&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;apps.hexactf.io/user&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Namespace&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="추가-deleted-상태-정보는-언제까지-가지고-있어야-할까">추가: Deleted 상태 정보는 언제까지 가지고 있어야 할까?
&lt;/h3>&lt;p>메트릭 구현 부분에서 &amp;ldquo;Deleted 상태 정보는 언제까지 가지고 있어야 할까?&amp;ldquo;가 난제이지 않을까 싶습니다.&lt;br>
Promethues는 기본적으로 30초 간격으로 &lt;code>/metrics&lt;/code> 내용을 스크랩합니다.&lt;/p>
&lt;p>저에게는 두 가지 고민이 있었습니다.&lt;/p>
&lt;ol>
&lt;li>삭제 요청 시 메트릭을 Deleted(3)로 설정 -&amp;gt; &lt;code>/metrics&lt;/code>에 불필요한 데이터가 쌓임. 대회가 끝날때마다 주기적으로 삭제하는 작업이 필요&lt;/li>
&lt;li>삭제 요청 시 메트릭을 Deleted 상태로 변경 후 &lt;strong>즉시 삭제&lt;/strong> -&amp;gt; Prometheus가 Deleted 상태를 스크랩할 수 있도록 시간 조정이 필요&lt;/li>
&lt;/ol>
&lt;p>대회 시기에는 Running, Error를 중점적으로 볼 예정이기 때문에 &lt;strong>두 번째 방법&lt;/strong>을 선택하게 되었습니다.&lt;br>
다만 Prometheus가 Deleted 상태를 한번 스크랩하고 삭제되어야 하기 때문에 &lt;strong>고루틴을 활용하여 1분 후에 메트릭이 삭제될 수 있도록 구현&lt;/strong>했습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">ChallengeReconciler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">handleDeletion&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span> &lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">challenge&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">hexactfproj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Challenge&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Result&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Processing deletion&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;challenge&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">crStatusMetric&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">WithLabelValues&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Labels&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;apps.hexactf.io/challengeId&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Labels&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;apps.hexactf.io/user&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Namespace&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nf">Set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Minute&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// scrape_interval이 30초라면 1분 정도 기다리면 안전&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">crStatusMetric&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">DeleteLabelValues&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Labels&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;apps.hexactf.io/challengeId&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Labels&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;apps.hexactf.io/user&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="nx">challenge&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Namespace&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Successfully completed deletion process&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 이 시점에서 finalizers가 비어 있으므로, K8s가 오브젝트를 실제 삭제함&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">ctrl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Result&lt;/span>&lt;span class="p">{},&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="challenge-operator-쿠버네티스에-배포하기">Challenge Operator 쿠버네티스에 배포하기
&lt;/h2>&lt;h3 id="metrics-endpoint-설정">metrics endpoint 설정
&lt;/h3>&lt;p>kubebuilder는 CNCF 프로젝트인만큼 &lt;a class="link" href="https://book.kubebuilder.io/reference/metrics" target="_blank" rel="noopener"
>프로메테우스 엔드포인트를 개방할 수 있는 ServiceMonitor를 자동으로 설정할 수 있습니다.&lt;/a> 단, &lt;strong>kubebuilder에 내장되어 있는 kustomize를 활용해야 간단한 설정으로 사용할 수 있게 됩니다.&lt;/strong> 그러나 저는 kustomize를 활용하지 않을 예정이므로 다른 방법을 찾아봐야 합니다.&lt;/p>
&lt;p>kustomize는 배포 도구일뿐 근본적으로 kubebuilder에는 메트릭을 export 해줄 수 있는 함수가 있다고 생각해도 될 것 같습니다.&lt;br>
&lt;code>main.go&lt;/code> 에 가보시면 metricServer의 속성을 프로그램 속성 값으로 받아서 설정하고 있습니다. 즉 프로그램 실행시킬때 적절한 속성값을 넣어주면 됩니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">metricsAddr&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">enableLeaderElection&lt;/span> &lt;span class="kt">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">probeAddr&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">secureMetrics&lt;/span> &lt;span class="kt">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">enableHTTP2&lt;/span> &lt;span class="kt">bool&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">tlsOpts&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">tls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Config&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">StringVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">metricsAddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;metrics-bind-address&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;:8080&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;The address the metrics endpoint binds to. &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Use :8443 for HTTPS or :8080 for HTTP, or leave as 0 to disable the metrics service.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">StringVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">probeAddr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;health-probe-bind-address&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;:8081&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;The address the probe endpoint binds to.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">BoolVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">enableLeaderElection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;leader-elect&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Enable leader election for controller manager. &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;Enabling this will ensure there is only one active controller manager.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Prometheus metrics http 사용&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">BoolVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">secureMetrics&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;metrics-secure&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;If set, the metrics endpoint is served securely via HTTPS. Use --metrics-secure=false to use HTTP instead.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">BoolVar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">enableHTTP2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;enable-http2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;If set, HTTP/2 will be enabled for the metrics and webhook servers&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">opts&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">zap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Options&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Development&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">opts&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">BindFlags&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">CommandLine&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">flag&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Parse&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">metricsServerOptions&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">metricsserver&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Options&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">BindAddress&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">metricsAddr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">SecureServing&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="helm-으로-배포하기">Helm 으로 배포하기
&lt;/h3>&lt;p>위의 글에서 Kustomize를 활용하지 않을 것이라고 말씀 드렸습니다. 이유는 단순하게 &lt;strong>Helm이 가장 익숙&lt;/strong>하기 때문입니다.&lt;br>
그래도 차이점은 확인해봐야겠죠? &lt;a class="link" href="https://www.gomgomshrimp.com/posts/k8s/helm-and-kustomize" target="_blank" rel="noopener"
>SEOWOO님의 블로그 - Helm과 Kustomize, 무엇을 쓸까?&lt;/a> 일부 참고해서 핵심적인 차이점을 설명하겠습니다.&lt;/p>
&lt;ul>
&lt;li>Helm
&lt;ul>
&lt;li>여러 템플릿의 모음으로 구성할 수 있으며 values.yaml을 매개변수화하여 값을 전달&lt;/li>
&lt;li>애플리케이션 전체 패키지 관리 및 배포에 더 중심&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Kustomize
&lt;ul>
&lt;li>상속의 개념을 활용해서 필요한 부분만 작성할 수 있음&lt;/li>
&lt;li>환경별 배포 구성 관리에 적합&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Challenge Operator를 배포할때 Deployment를 활용했습니다. Operator의 철학에서도 Operator는 단일 Deployment로 배포되어야 한다고 설명했습니다.&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>Operators should install as a single deployment e.g. &lt;code>kubectl create -f https://coreos.com/operators/etcd/latest/deployment.yaml&lt;/code> and take no additional action once installed.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>출처: &lt;a class="link" href="https://www.redhat.com/en/blog/introducing-operators-putting-operational-knowledge-into-software" target="_blank" rel="noopener"
>Introducing Operators: Putting Operational Knowledge into Software&lt;/a>&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>여기서 주목해야 할 부분은 &lt;code>--metrics-bind-address=:8080&lt;/code> 부분입니다.
앞서 말했듯이 kubebuilder는 내부적으로 메트릭 서버를 만들었습니다. 이를 외부에 접근할 수 있도록 &lt;code>:8080(http)&lt;/code> 를 설정해야 합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="w"> &lt;/span>&lt;span class="l">.Release.Name }}-operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;helm.sh/hook-weight&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">challenge-operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">challenge-operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hexactf/env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">mgmt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceAccountName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="w"> &lt;/span>&lt;span class="l">.Release.Name }}-operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="w"> &lt;/span>&lt;span class="l">.Values.operator.image.repository }}:{{ .Values.operator.image.tag }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">imagePullPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="w"> &lt;/span>&lt;span class="l">.Values.operator.image.pullPolicy }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Add the args section here&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># Use --metrics-bind-address and substitute the environment variable METRICS_ADDR&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;--metrics-bind-address=:8080&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="servicemonitor-설정하기">ServiceMonitor 설정하기
&lt;/h3>&lt;p>Prometheus ServiceMonitor는 차례로 해당 엔드포인트를 검색하고 파드를 모니터링하도록 프로메테우스를 구성합니다. 어떤 엔드포인트의 어떤 포트를 통해 메트릭을 스크래핑하고 어떤 매개변수를 활용할지 구성하게 됩니다. 쉽게 말해 &lt;strong>검색 대상을 Prometheus Operator가 일괄적으로 처리할 수 있도록 ServiceMonitor라는 리소스에 정의한 것입니다.&lt;/strong>&lt;/p>
&lt;p>Operator에 메트릭 서버의 포트를 열었다면 Helm에서 Port를 열어주고, Port를 연결해준 ServiceMonitor가 필요하겠죠?&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="w"> &lt;/span>&lt;span class="l">.Release.Name }}-operator-metrics&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hexactf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">challenge-operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/instance&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">challenge-operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/component&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">metrics&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">challenge-operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">operator-metrics&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TCP&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">targetPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">monitoring.coreos.com/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ServiceMonitor&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{{&lt;span class="w"> &lt;/span>&lt;span class="l">.Release.Name }}-operator-monitor&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">monitoring &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Prometheus Operator가 설치된 ns&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">release&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">prometheus &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Prometheus Operator의 label select&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Challenge Operator service matchlabel&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">challenge-operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app.kubernetes.io/component&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">metrics&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">namespaceSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 스크랩할 ns&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matchNames&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">hexactf&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Challenge Operator가 배포되는 ns&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">default&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">endpoints&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">operator-metrics&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">interval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">30s&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">scrapeTimeout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">10s&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/metrics&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">scheme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>프로메테우스를 확인하면 아래와 같이 서비스를 확인할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-2.png"
width="1007"
height="292"
srcset="https://s0okju.github.io/p/hexactf-9/image-2_hu_fc9af273d105a8c.png 480w, https://s0okju.github.io/p/hexactf-9/image-2_hu_141a1be2abc2d49b.png 1024w"
loading="lazy"
alt="프로메테우스 대시보드에서 확인한 Challenge Operator metrics endpoint"
class="gallery-image"
data-flex-grow="344"
data-flex-basis="827px"
>&lt;/p>
&lt;h2 id="시각화">시각화
&lt;/h2>&lt;p>저희가 시각화 할 목록은 크게 3가지입니다.&lt;/p>
&lt;ul>
&lt;li>상태별 Challenge 개수&lt;/li>
&lt;li>&lt;strong>사용자, 문제 별&lt;/strong> Challenge 상태&lt;/li>
&lt;li>문제별 실행 중/에러 커스텀 리소스 수&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-3.png"
width="1584"
height="711"
srcset="https://s0okju.github.io/p/hexactf-9/image-3_hu_424f59dbe6f2d08c.png 480w, https://s0okju.github.io/p/hexactf-9/image-3_hu_77e8732e558b4689.png 1024w"
loading="lazy"
alt="실제 대회에서 사용한 대시보드"
class="gallery-image"
data-flex-grow="222"
data-flex-basis="534px"
>&lt;/p>
&lt;p>저는 그 중 상태별 Challenge 개수와 사용자, 문제 별 Challenge 상태를 보여드리겠습니다.&lt;/p>
&lt;blockquote>
&lt;p>자세한 사항은 &lt;a class="link" href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/" target="_blank" rel="noopener"
>Grafana 공식 문서&lt;/a>를 참고하시길 바랍니다.
참고로 저는 하나하나씩 다 해봤습니다. 🥹&lt;/p>&lt;/blockquote>
&lt;h3 id="상태별-challenge-개수">상태별 Challenge 개수
&lt;/h3>&lt;p>2시간 동안 가장 마지막 값이 1(Running)인 경우를 count 해주는 명령어를 사용했습니다.&lt;/p>
&lt;blockquote>
&lt;p>2시간은 임의의 숫자로 실제 대회에서는 6시간을 기준으로 집계했습니다.&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-4.png"
width="762"
height="380"
srcset="https://s0okju.github.io/p/hexactf-9/image-4_hu_cd8ed660c3f187e7.png 480w, https://s0okju.github.io/p/hexactf-9/image-4_hu_fe37b1a78922e555.png 1024w"
loading="lazy"
alt="상태별 Challenge 개수 PromQL"
class="gallery-image"
data-flex-grow="200"
data-flex-basis="481px"
>&lt;/p>
&lt;p>하나의 패널에 2개 이상 메트릭을 설정하게 되면 Value에 알파벳이 붙습니다. 그러므로 맨 아래 Override를 활용하여 임의로 정해진 값을 수정합니다.
더 나은 시각화를 위해 Color scheme을 통해 색도 설정했습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-5.png"
width="354"
height="586"
srcset="https://s0okju.github.io/p/hexactf-9/image-5_hu_2586051c7b8f12f3.png 480w, https://s0okju.github.io/p/hexactf-9/image-5_hu_ca6eeda7c0e80c03.png 1024w"
loading="lazy"
alt="Override를 활용하여 field name과 색 설정"
class="gallery-image"
data-flex-grow="60"
data-flex-basis="144px"
>&lt;/p>
&lt;p>그리고 설정한 색을 Background에 보일 수 있도록 Stat styles에 설정했습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-6.png"
width="353"
height="530"
srcset="https://s0okju.github.io/p/hexactf-9/image-6_hu_e21a7d6750258aab.png 480w, https://s0okju.github.io/p/hexactf-9/image-6_hu_dc53968c972a7bc.png 1024w"
loading="lazy"
alt="Stat styles 설정"
class="gallery-image"
data-flex-grow="66"
data-flex-basis="159px"
>&lt;/p>
&lt;p>아래와 같이 시각화를 할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-7.png"
width="1129"
height="249"
srcset="https://s0okju.github.io/p/hexactf-9/image-7_hu_219bfae10535345.png 480w, https://s0okju.github.io/p/hexactf-9/image-7_hu_923395d241e9dc6f.png 1024w"
loading="lazy"
alt="상태별 Challenge 개수 최종"
class="gallery-image"
data-flex-grow="453"
data-flex-basis="1088px"
>&lt;/p>
&lt;h3 id="사용자-문제-별-challenge-상태">사용자, 문제 별 Challenge 상태
&lt;/h3>&lt;p>위와 동일하게 최근 상태 정보만 가져오면 되기 때문에 집계 시간 중 가장 최신의 데이터를 가져옵니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">last_over_time(challenge_resource_status[2h])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Gauge는 숫자로 값을 설정합니다. 그러므로 Value mappings를 활용하여 문자로 변환합니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-8.png"
width="349"
height="200"
srcset="https://s0okju.github.io/p/hexactf-9/image-8_hu_764c9c7424de2d57.png 480w, https://s0okju.github.io/p/hexactf-9/image-8_hu_ef63f2cb567cfd98.png 1024w"
loading="lazy"
alt="value mapping"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>&lt;/p>
&lt;p>PromQL은 쉬운 대신 Transform을 설정해야 합니다.&lt;/p>
&lt;ol>
&lt;li>Oragnaize field by name : challenge_id, username, status 값을 제외하고 전부 제거합니다.&lt;/li>
&lt;li>Group by: Challenge_id, username을 그룹핑하여 중복을 없애고 Status는 가장 최신 값을 가져옵니다.&lt;/li>
&lt;li>Grouping to Matrix: Grouping한 값을 가지고 새로운 Matrix를 활용합니다.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-9.png"
width="927"
height="304"
srcset="https://s0okju.github.io/p/hexactf-9/image-9_hu_b4556438ba351c9e.png 480w, https://s0okju.github.io/p/hexactf-9/image-9_hu_6d345ca5c16779c1.png 1024w"
loading="lazy"
alt="사용자, 문제 별 Challenge 상태-Transform"
class="gallery-image"
data-flex-grow="304"
data-flex-basis="731px"
>&lt;/p>
&lt;p>테이블 형태로 시각화 하면 아래와 같은 결과를 얻을 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/hexactf-9/image-10.png"
width="1106"
height="115"
srcset="https://s0okju.github.io/p/hexactf-9/image-10_hu_663245b90d615f75.png 480w, https://s0okju.github.io/p/hexactf-9/image-10_hu_923ae2d9817a3952.png 1024w"
loading="lazy"
alt="사용자, 문제 별 Challenge 상태-최종"
class="gallery-image"
data-flex-grow="961"
data-flex-basis="2308px"
>&lt;/p>
&lt;h2 id="마치며">마치며
&lt;/h2>&lt;p>Challenge Operator와 관련된 글을 모두 작성했습니다.&lt;/p>
&lt;p>다음 글에서는 실질적으로 클라이언트가 요청을 보내는 Challenge Control API에 대해 설명하겠습니다.&lt;/p>
&lt;h2 id="references">References
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://wlsdn3004.tistory.com/35" target="_blank" rel="noopener"
>Prometheus 란?&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://prometheus.io/docs/concepts/metric_types/" target="_blank" rel="noopener"
>Metric types | Prometheus&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.gomgomshrimp.com/posts/k8s/helm-and-kustomize" target="_blank" rel="noopener"
>Helm과 Kustomize, 무엇을 쓸까?&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://grafana.com/docs/grafana/latest/panels-visualizations/query-transform-data/transform-data/" target="_blank" rel="noopener"
>Transform data | Grafana documentation&lt;/a>&lt;/li>
&lt;li>정현석, 진미란 . (2023). 모니터링의 새로운 미래 관측 가능성. 제이펍.&lt;/li>
&lt;/ul></description></item></channel></rss>