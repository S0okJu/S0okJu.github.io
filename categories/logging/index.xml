<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Logging on S0okJu.dev</title><link>https://s0okju.github.io/categories/logging/</link><description>Recent content in Logging on S0okJu.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 15 Jan 2025 00:00:00 +0900</lastBuildDate><atom:link href="https://s0okju.github.io/categories/logging/index.xml" rel="self" type="application/rss+xml"/><item><title>서버 이야기. Kolla-ansible 를 활용한 기본 Openstack 로깅 대시보드 구성</title><link>https://s0okju.github.io/p/server-story/</link><pubDate>Wed, 15 Jan 2025 00:00:00 +0900</pubDate><guid>https://s0okju.github.io/p/server-story/</guid><description>&lt;p>클라우드 로그 관리 사례를 보면서 문득 운영 중인 Openstack 서버에 로그가 얼마나 쌓였는지 궁금해졌습니다. 지금부터 그 과정을 알아가보는 시간을 가지겠습니다.&lt;/p>
&lt;h2 id="opensearch란">Opensearch란?
&lt;/h2>&lt;p>Elasticsearch 기반 오픈소스 검색 엔진 솔루션입니다. 검색 및 분석을 위한 강력한 도구를 제공하며 기존의 Elasticsearch의 기능을 사용할 수 있습니다.
Elasticsearch가 제품의 라이센스를 변경하면서 Amazon이 기존 프로젝트를 fork하여 OpenSearch를 만들게 되었습니다. &lt;a class="link" href="https://www.elastic.co/kr/elasticsearch/opensearch" target="_blank" rel="noopener"
>Elasticsearch 측에서 OpenSearch와 Elasticsearch 비교한 글&lt;/a>이 있으니 참고 바랍니다.&lt;/p>
&lt;h2 id="opensearch-설치">Opensearch 설치
&lt;/h2>&lt;p>Kolla-ansible은 Openstack를 구성하기 위한 다양한 배포 도구입니다. Ansible를 활용하여 컨테이너 형태로 컴포넌트를 설치합니다.&lt;/p>
&lt;blockquote>
&lt;p>자세한 사항은 &lt;a class="link" href="https://docs.openstack.org/kolla-ansible/latest/reference/logging-and-monitoring/central-logging-guide.html" target="_blank" rel="noopener"
>공식문서&lt;/a>를 참고하길 바랍니다.&lt;/p>&lt;/blockquote>
&lt;p>기본적으로 중앙 로깅 도구로 Opensearch를 지원해줍니다. &lt;code>globals.yaml&lt;/code> 에 설정값을 수정하고 다시 배포하면 됩니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">enable_central_logging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;yes&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="시각화">시각화
&lt;/h2>&lt;blockquote>
&lt;p>인터넷에서 OpenSearch 사용법과 관련된 글을 검색하면 생각보다 검색 결과가 적습니다. 하지만 OpenSearch 대신 Kibana로 검색하면 많은 내용을 확인할 수 있습니다.&lt;/p>&lt;/blockquote>
&lt;p>로그 데이터를 중심으로 두 개의 그래프를 시각화 할 것입니다.&lt;/p>
&lt;ol>
&lt;li>Log Level 분포도&lt;/li>
&lt;li>시간에 따른 로그 총 개수&lt;/li>
&lt;/ol>
&lt;h3 id="log-level-분포도">Log Level 분포도
&lt;/h3>&lt;p>Log Level 분포도는 다른 의미로 각각의 Log Level의 총 개수를 하나의 그래프에 표현하는 것과 같습니다. 그러므로 Metrics의 집계 기준을&lt;code>Count&lt;/code>로 잡았습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image.png"
width="684"
height="249"
srcset="https://s0okju.github.io/p/server-story/image_hu_2b525b1d4fb5f146.png 480w, https://s0okju.github.io/p/server-story/image_hu_d157cc10744868ed.png 1024w"
loading="lazy"
alt="Log Level Metrics"
class="gallery-image"
data-flex-grow="274"
data-flex-basis="659px"
>&lt;/p>
&lt;p>&lt;code>log_level.keyword&lt;/code> 용어를 기준으로 그룹화해줍니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image-1.png"
width="676"
height="559"
srcset="https://s0okju.github.io/p/server-story/image-1_hu_473e3bd1bcc22f94.png 480w, https://s0okju.github.io/p/server-story/image-1_hu_d99f496f36efc091.png 1024w"
loading="lazy"
alt="Log Level Buckets"
class="gallery-image"
data-flex-grow="120"
data-flex-basis="290px"
>&lt;/p>
&lt;p>아래와 같은 분포도를 확인할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image-2.png"
width="1178"
height="649"
srcset="https://s0okju.github.io/p/server-story/image-2_hu_3638ef6514cfe6c1.png 480w, https://s0okju.github.io/p/server-story/image-2_hu_ade719b1ddb62cfc.png 1024w"
loading="lazy"
alt="Log Level별 분포도 결과"
class="gallery-image"
data-flex-grow="181"
data-flex-basis="435px"
>&lt;/p>
&lt;h3 id="시간에-따른-로그-총-개수">시간에 따른 로그 총 개수
&lt;/h3>&lt;p>시간 순서대로 집계가 되어야 하면서 매일 생성되는 로그 총합과 누적 로그 총합이 구분되면서 보여야 합니다.
Area Chart로 설정하여 시각화를 수행했습니다.
크게 두 가지가 필요하므로 집계 기준을 Count, Cumulative Sum으로 설정했습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image-3.png"
width="587"
height="511"
srcset="https://s0okju.github.io/p/server-story/image-3_hu_f77d1489183e4e02.png 480w, https://s0okju.github.io/p/server-story/image-3_hu_6a98bb42a19c6c58.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="114"
data-flex-basis="275px"
>&lt;/p>
&lt;p>하루 단위로 데이터를 보여줄 수 있도록 Bucket를 설정했습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image-4.png"
width="595"
height="478"
srcset="https://s0okju.github.io/p/server-story/image-4_hu_f93e3ca4a834fe83.png 480w, https://s0okju.github.io/p/server-story/image-4_hu_a4844cdf7b20ce9f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="124"
data-flex-basis="298px"
>&lt;/p>
&lt;p>대략 2주치 로그의 누적 개수를 확인했습니다. 7,000,000개가 넘어가는 것을 보고 많이 놀랐습니다. 저장 공간에 불필요한 로그들이 쌓이는 것 같다는 생각이 들었고 관리 방안을 생각해야 했습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image-5.png"
width="1167"
height="686"
srcset="https://s0okju.github.io/p/server-story/image-5_hu_67f063547618ecb7.png 480w, https://s0okju.github.io/p/server-story/image-5_hu_3d808c3137b13c79.png 1024w"
loading="lazy"
alt="누적 로그 합계 그래프"
class="gallery-image"
data-flex-grow="170"
data-flex-basis="408px"
>&lt;/p>
&lt;h2 id="로그-관리-방안">로그 관리 방안
&lt;/h2>&lt;h3 id="방향성-잡기">방향성 잡기
&lt;/h3>&lt;p>로그는 서버의 로컬 저장소에 저장되기 때문에 저장 용량 관리 측면에서 중요합니다.&lt;/p>
&lt;p>Kolla-ansble의 opensearch 로그 파일 경로&lt;code>/var/log/kolla/opensearch&lt;/code> 를 보면 시간별로 로그 파일이 압축되어 있습니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image-6.png"
width="755"
height="275"
srcset="https://s0okju.github.io/p/server-story/image-6_hu_325ac8c2165c27e5.png 480w, https://s0okju.github.io/p/server-story/image-6_hu_59d8b9b435f6495.png 1024w"
loading="lazy"
alt="서버에서 확인한 Kolla-ansbile 컴포넌트 로그"
class="gallery-image"
data-flex-grow="274"
data-flex-basis="658px"
>&lt;/p>
&lt;p>2달치 압축된 로그의 총 용량을 보면 31MB로 상당히 적습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">du -ch *.gz &lt;span class="p">|&lt;/span> grep total
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>로그를 보니 Public Cloud의 로그 관리 사례가 생각났습니다.
AWS 경우에는 Object Storage인 S3에 로그를 저장하여 Lifecycle를 관리하기도 합니다.&lt;/p>
&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image-7.png"
width="800"
height="323"
srcset="https://s0okju.github.io/p/server-story/image-7_hu_34623a2cccd1969.png 480w, https://s0okju.github.io/p/server-story/image-7_hu_1b2f76d24031d4c4.png 1024w"
loading="lazy"
alt="출처 - Logging strategies for security incident response | AWS Security Blog"
class="gallery-image"
data-flex-grow="247"
data-flex-basis="594px"
>&lt;/p>
&lt;p>Openstack도 swift라는 Object Storage가 있습니다. SSD로 구성된 로컬 저장소에 로그가 쌓이는 것을 원치 않기 때문에 HDD로 구성된 swift에 로그를 옮기고 싶었습니다.
기본적인 구성으로는 swift에 전송할 수 없으며 추가적인 플러그인 사용을 고려해야 합니다. &lt;a class="link" href="https://opensearch.org/docs/latest/install-and-configure/plugins/#available-plugins" target="_blank" rel="noopener"
>그러나 현재까지 공식적으로 swift로 데이터를 전송하는 플러그인은 없는 것 같습니다. &lt;/a>&lt;/p>
&lt;p>그렇다면 보유(retention) 정책을 확인하는 것으로 방향을 잡았습니다.&lt;/p>
&lt;h3 id="state-management-policies">State management policies
&lt;/h3>&lt;p>&lt;img src="https://s0okju.github.io/p/server-story/image-8.png"
width="923"
height="318"
srcset="https://s0okju.github.io/p/server-story/image-8_hu_aed498de88d3ef37.png 480w, https://s0okju.github.io/p/server-story/image-8_hu_c32c320a00b0c447.png 1024w"
loading="lazy"
alt="Opensearch에서 확인한 State management policies"
class="gallery-image"
data-flex-grow="290"
data-flex-basis="696px"
>&lt;/p>
&lt;p>아래 보유 정책은 크게 3가지 상태가 있습니다.&lt;/p>
&lt;ul>
&lt;li>open&lt;/li>
&lt;li>close&lt;/li>
&lt;li>delete&lt;/li>
&lt;/ul>
&lt;p>이름만 다를 뿐이지 Hot-Warm-Cold 라고 보시면 됩니다.
기본 설정을 보면 open 상태로 로그가 생성되다가 30일 후에 close 상태로 변화하고 60일 후에 delete 상태로 변화가 됩니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">{&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;policy&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># ...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;states&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;open&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;actions&amp;#34;: &lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;transitions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;state_name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;close&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;conditions&amp;#34;: { &amp;#34;min_index_age&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;30d&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;close&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;actions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;retry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;count&amp;#34;: 3, &amp;#34;backoff&amp;#34;: &amp;#34;exponential&amp;#34;, &amp;#34;delay&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;1m&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;close&amp;#34;: &lt;/span>{}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;transitions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;state_name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;delete&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;conditions&amp;#34;: { &amp;#34;min_index_age&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;60d&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;delete&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;actions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;retry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;count&amp;#34;: 3, &amp;#34;backoff&amp;#34;: &amp;#34;exponential&amp;#34;, &amp;#34;delay&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;1m&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;delete&amp;#34;: &lt;/span>{}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;transitions&amp;#34;: &lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>최종적으로 보유 정책을 수정하지 않았습니다.&lt;/strong>
로그는 성능 정보에 대한 집계나 디버깅할때 유용합니다. 이때 적절한 과거 데이터를 보관하는 것이 중요하다고 생각합니다. 생각보다 close 상태의 압축된 로그 크기가 작았기 때문에 더욱 줄일 필요는 없었다고 봅니다.&lt;/p>
&lt;h2 id="마무리">마무리
&lt;/h2>&lt;p>이 글은 취준생일때 작성한 글입니다. 실무에는 어떻게 다룰지는 모르겠습니다.
언젠간 취업하고 나서 잘못된 부분을 확인하면 새로운 글로 찾아오겠습니다.&lt;/p></description></item></channel></rss>